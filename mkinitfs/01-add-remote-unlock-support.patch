From: Nuc1eoN <nuc1eon@neonsys.org>
Date: Sat, 28 Dec 2024 02:11:42 +0100
Subject: [PATCH] Add remote ssh unlock

Updated patch for mkinitfs 3.11.1.

Original credits go to @dermotbradley

---
 Makefile                            |  1 +
 features.d/remote_unlock_luks.files |  2 +
 initramfs-init.in                   | 78 +++++++++++++++++++++++++++--
 3 files changed, 77 insertions(+), 4 deletions(-)
 create mode 100644 features.d/remote_unlock_luks.files

diff --git a/Makefile b/Makefile
index f30d76f..208d362 100644
--- a/Makefile
+++ b/Makefile
@@ -45,6 +45,7 @@ CONF_FILES	:= mkinitfs.conf \
 		features.d/raid.files \
 		features.d/raid.modules \
 		features.d/reiserfs.modules \
+		features.d/remote_unlock_luks.files \
 		features.d/scsi.modules \
 		features.d/squashfs.modules \
 		features.d/ubifs.modules \
diff --git a/features.d/remote_unlock_luks.files b/features.d/remote_unlock_luks.files
new file mode 100644
index 0000000..5df4973
--- /dev/null
+++ b/features.d/remote_unlock_luks.files
@@ -0,0 +1,2 @@
+/usr/sbin/dropbear
+/etc/dropbear/*
\ No newline at end of file
diff --git a/initramfs-init.in b/initramfs-init.in
index 75db1aa..7ce4790 100755
--- a/initramfs-init.in
+++ b/initramfs-init.in
@@ -242,7 +242,7 @@ configure_ip() {
 	if [ "$autoconf" = "dhcp" ]; then
 		# automatic configuration
 		if [ ! -e "$ROOT"/usr/share/udhcpc/default.script ]; then
-			echo "ERROR: DHCP requested but not present in initrd"
+			echo "ERROR: DHCP requested but not present in initramfs"
 			return 1
 		fi
 		ebegin "Obtaining IP via DHCP ($iface)"
@@ -308,6 +308,63 @@ find_boot_repositories() {
 	fi
 }
 
+setup_dropbear() {
+	# Set the unlock_disk script as shell for root
+	sed -i 's|\(root:x:0:0:root:/root:\).*$|\1/etc/dropbear/unlock_disk|' \
+		/etc/passwd
+	echo '/etc/dropbear/unlock_disk' >> /etc/shells
+
+	# Transfer authorized_keys from initramfs into place
+	mkdir -p /root/.ssh
+	if [ -e /etc/dropbear/authorized_keys ]; then
+		mv /etc/dropbear/authorized_keys /root/.ssh/
+	fi
+
+	if [ -n "$KOPT_remote_unlock_luks_ssh_port" ]; then
+		# Listen on a non-default port
+		dropbear_extra_opts="-p $KOPT_remote_unlock_luks_ssh_port"
+	else
+		dropbear_extra_opts=""
+	fi
+	if [ ! -f /etc/dropbear/dropbear_ecdsa_host_key ] && \
+	   [ ! -f /etc/dropbear/dropbear_ed25519_host_key ] && \
+	   [ ! -f /etc/dropbear/dropbear_rsa_host_key ]; then
+		# No host keys present so autogenerate temporary ones
+		dropbear_extra_opts="$dropbear_extra_opts -R"
+	fi
+
+	if [ "$KOPT_quiet" = yes ]; then
+		# Write message to console as when booting with "quiet" option
+		# then other messages do not appear and user has no idea why
+		# boot appears to have paused/stopped.
+		echo
+		echo "Starting dropbear SSH daemon for remote encryption unlocking"
+		echo
+	fi
+
+	if [ -n "$KOPT_remote_unlock_luks_ssh_port" ]; then
+		ebegin "Starting dropbear SSH daemon on port $KOPT_remote_unlock_luks_ssh_port"
+	else
+		ebegin "Starting dropbear SSH daemon"
+	fi
+
+	# Store the current set of environment variables so they can be
+	# loaded by the unlock_disk script run via Dropbear SSH.
+	set > /etc/dropbear/init-env
+	chmod +x /etc/dropbear/init-env
+
+	dropbear -E -F -j -k -s $dropbear_extra_opts
+
+	if [ "$KOPT_quiet" = yes ]; then
+		# Write message to console as when booting with "quiet" option
+		# then other messages do not appear and user has no idea that
+		# SSH daemon has been shutdown.
+		echo
+		echo "Stopped dropbear SSH daemon as remote encryption unlocking completed"
+		echo
+	fi
+}
+
 setup_nbd() {
 	$MOCK modprobe -q nbd max_part=8 || return 1
 	local IFS=, n=0
@@ -496,6 +553,8 @@ myopts="BOOTIF
 	overlaytmpfsflags
 	pkgs
 	quiet
+	remote_unlock_luks
+	remote_unlock_luks_ssh_port
 	resume
 	resume_offset
 	root
@@ -665,6 +724,11 @@ if [ -n "$KOPT_wireguard" ]; then
 	setup_wireguard || echo "Failed to setup wireguard tunnel."
 fi
 
+if [ "$KOPT_remote_unlock_luks" = "yes" ]; then
+	configure_ip
+	setup_dropbear
+fi
+
 if [ -n "$KOPT_nbd" ]; then
 	# TODO: Might fail because nlplug-findfs hasn't plugged eth0 yet
 	configure_ip
@@ -700,9 +764,15 @@ ln -s /proc/mounts "$ROOT"/etc/mtab
 if [ -n "$KOPT_root" ]; then
 	# run nlplug-findfs before SINGLEMODE so we load keyboard drivers
 	ebegin "Mounting root"
-	$MOCK nlplug-findfs $cryptopts -p /sbin/mdev ${KOPT_debug_init:+-d} \
-		${KOPT_uevent_buf_size:+-U $KOPT_uevent_buf_size} \
-		$KOPT_root
+	if [ -z "$KOPT_remote_unlock_luks" ] || \
+		[ "$KOPT_remote_unlock_luks" != "yes" ] || \
+		[ -z "$KOPT_cryptdm" ] || \
+		[ ! -e /dev/mapper/"${KOPT_cryptdm}" ]; then
+		# shellcheck disable=SC2086
+		$MOCK nlplug-findfs $cryptopts -p /sbin/mdev ${KOPT_debug_init:+-d} \
+			${KOPT_uevent_buf_size:+-U $KOPT_uevent_buf_size} \
+			$KOPT_root
+	fi
 
 	if [ "$SINGLEMODE" = "yes" ]; then
 		echo "Entering single mode. Type 'exit' to continue booting."
-- 
2.47.1

